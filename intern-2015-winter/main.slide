Recruit Holdings Winter Internship 2015
インフラ／DB／バックエンドエンジニア 問題
13 Dec 2014

Kuma Arakawa
arakawa@r.recruit.co.jp
http://www.recruit-lifestyle.co.jp
@Morikuma_Works

* 自己紹介

- 荒川です
- リクルートライフスタイル　エンジニア
- 好きな組み合わせ: Golang/Docker/CoreOS/GCE
- 好きなディストリビューション: Debian, Ubuntu
- 使ってるシェル: zsh
- このスライドもGolangを使って作られました
- FF14はTitanサーバでやってます

* 課題概要

* 課題概要

列挙された仕様を満たすURL短縮サービスを作成する。
ここでは元のURLに対して、同じページを示す(十分短い)別のURLを与えるサービスとする。

* 例

例えば、

短縮したいURL:http://www.recruit-lifestyle.co.jp/
サービスによって生成された短縮後URL:http://goo.gl/1iGJQ

短縮したいURL:http://www.thelongestdomainnameintheworldandthe
nsomeandthensomemoreandmore.com/
サービスによって生成された短縮後URL:http://misosi.lu/XVlBzgba

のようなものを指す。

* 課題1: 以下の仕様を満たすサービスを実装する

* 仕様1: URL短縮API

短縮したいURLを短縮できるWebAPIを有する。
例えば http://www.recruit.jp/ を短縮したい場合は下記のようなリクエストを送信する。
なお、ドメイン名”example.com”は例であり、実際には各自に配布されたドメイン名/IPアドレスを使用すること。

.code 1-1.txt

* 仕様1: URL短縮API

curlコマンドを用いると、

.code 1-2.txt

* 仕様1: URL短縮API

成功した場合、下記のようにレスポンスを返す

.code 1-3.txt

なお、Createdは短縮されたURLが生成された日時のUNIX時間とする。

* 仕様2: リダイレクト機能

APIを使用して得た短縮後URLを使用できる機能を有する。

例えば、 https://example.com/a84Aued にアクセスすると、

.code 2-1.txt

を返す。

* 仕様2: リダイレクト機能

この機能は、

- HTTPステータスコード308を返す
- Content-Type: text/html; charset=UTF-8 を指定する
- 何らかの原因で遷移しなかった場合のために、遷移を促す文言と短縮前リンクが記述されたHTMLを例に従って返す

を満たさなければならない。

なお、例ではHTTP/1.1を用いているが、HTTP/2で応答しても問題ないこととする

* 課題2: 手直し・見直し

* 手直し・見直し

課題1のサービスが実装でき、動作する状態になったら、下記を見直す。
- リファクタリング
- テストコードは書かれているか
- 十分な速度で実行されるか
- アクセスが多い場合でもユーザに不満を持たれることなく動くかどうか
- エラーを考慮した作りになっているか
- アルゴリズムは効率的か

* 課題3: ドキュメント作成

* ドキュメント作成

次のスライドに記述されている内容を含むドキュメントを作成する。
フォーマットは特に定めない。しかし、一般的なエディタ、Microsoft PowerPoint, Keynote, PDFリーダ, Webブラウザで開ける形式が望ましい。

ドキュメントは *ソースコードと同じ採点比重で考察される* ので、熟考して作成することを推奨する。

* ドキュメント作成

- 使用した技術の一覧
- 設計思想、なぜこのように設計したのか？
- データの流れ
- データの保存戦略
- 処理速度の観点
- 工夫した部分
- その他、主張したいこと、アピールポイント
- 参考文献

技術とは、プログラミング言語、ミドルウェア、ライブラリ、アルゴリズムなどのこと

詳しく書くことを推奨する。

ドキュメントは、リポジトリの/docに入れてcommitし、pushを行うこと。

* 提出物一覧

* 提出物一覧

3つの提出物が存在する

- 仕様を満たしたURL短縮サービスが動くサーバ(サーバは提供します)
- 指定されたGitHubのリポジトリにPushされたコード
- 指定されたパス(/doc)にPushされたドキュメント

* レギュレーション

* レギュレーション

上記仕様の例で用いられているURLの構造をそのまま使い、変更はできないものとする。
よって、URL短縮APIのパスは “/api/v1/shortenurl” 、短縮URL使用機能のパスは “/(識別子)” のように実装する必要がある。

識別子の生成方法、長さ、使用する文字はサービスの特性を考えて自由に仕様を定義できるものとする。
但し、RFCのURI定義に準拠した仕様である必要がある。

短縮されたURLをユーザが使用する際に必要なデータはある程度の期間保持されるように設計する。
「ある程度の期間」の定義は、このサービスの特性を考えながら、自分で定義を行い、その定義に関しての説明（定義の説明、なぜそのように定義したのか）をドキュメントに記載する必要がある。

* レギュレーション

ミドルウェアは、設計を満たせるものを自由に選定して使用できるもとのとする。
但し、営利目的での利用を禁止するライセンスに基づいて配布されているもの、GPL, LGPLのものは使用できないものとする。

サービスを動作させるために必要なリソースは、配布されたサーバ内で完結されなければならない。
これは、自分で所有しているサーバのリソースを別途使用したものや、既存のURL短縮サービスを流用して、サービス開発することを避けるためのレギュレーションである。

課題提出期限は * 2014/12/13 19:00(JST) * です。その間どのように時間を使っても構いません。
_このフロアには自販機が、33Fにはコンビニが有ります_

* 評価方法

* 評価方法

評価は下記のように行われる
1. 課題1で提示した仕様を満たしているか
2. ドキュメントに書かれている設計思想とその理由づけ
3. ソースコードの簡潔さ、実装での技術的負債の有無
4. 課題2の見直しポイントが考慮されて実装されているか
- 動作のベンチマーク測定をする

* その他

* 終わった方は

早く終わった方は、アンケートに回答終わった方から退出可能です。

.link http://misosi.lu/1day-fall-survey アンケートはこちら

19:30から懇親会があるので、 *19:00* にこの部屋に戻ってきてください。

* Q&A

何か課題や施設のことなどで質問、要望がある場合はお声がけください。
課題に関する質問の場合、他の参加者に質問と回答を共有します。
また、回答できない質問もあります。ご了承ください。

回答はこのプレゼンに追記されるので、時々更新してみてください。
このスライドは http://misosi.lu/intern2015winter-backend にあります。

* Q&A

Q:喫煙所はありますか？
A:喫煙所はこの部屋の反対側にあります

Q:Amazon Linuxを選んだ際のuser名は？
A:ec2-userです。Ubuntuを選んだ場合は、ubuntuです。

* 最後に

リクルートライフスタイルではエンジニアのアルバイトを募集しています。
興味ある方はお声がけください。

この1 Day Jobに関して、今日の課題終了後以降であればブログなどに書いても大丈夫です

* これから

- サーバを配布します
好きなディストリビューション(Amazon Linux(CentOSベース)もしくはUbuntu)、AMIを選んでください

- ディスプレイの設置準備をしてください
必要な方はディスプレイを設置してください
